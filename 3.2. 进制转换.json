{
  "3.2. 进制转换": [
    {
      "type": "explanation",
      "text": "小朋友们，我们之前学习了计算机怎么存数字，用的是二进制。\n但是我们平时数数用的是十进制（就是0到9这十个数字）。\n计算机还有别的“数数语言”哦！比如十六进制。",
      "points": 0
    },
    {
      "type": "explanation",
      "text": "我们最熟悉的十进制（Base 10），有0、1、2、3、4、5、6、7、8、9这十个数字。\n每一位数字代表的“力量”不一样：\n最右边是“个位”（10的0次方，也就是1）\n往左一位是“十位”（10的1次方，也就是10）\n再往左是“百位”（10的2次方，也就是100）\n比如数字 `123` 就是 `1个一百 + 2个十 + 3个一`。",
      "points": 0
    },
    {
      "type": "explanation",
      "text": "计算机的二进制（Base 2）只有两个数字：0和1。\n它的每一位代表的“力量”是2的次方：\n最右边是“个位”（2的0次方，也就是1）\n往左一位是“二位”（2的1次方，也就是2）\n再往左是“四位”（2的2次方，也就是4）\n再往左是“八位”（2的3次方，也就是8）\n... 就像这样：1, 2, 4, 8, 16, 32, 64, 128...",
      "points": 0
    },
    {
      "type": "fill_blank",
      "text": "在二进制数中，从右往左数，第四位代表的“力量”（权值）是 `__`。",
      "question_parts": [
        "在二进制数中，从右往左数，第四位代表的“力量”（权值）是 `",
        "`。"
      ],
      "answer": "8",
      "hint": "从右往左数，第一位是1，第二位是2，第三位是4，第四位是...？",
      "points": 10
    },
    {
      "type": "fill_blank",
      "text": "在二进制数中，从右往左数，第五位代表的“力量”（权值）是 `__`。",
      "question_parts": [
        "在二进制数中，从右往左数，第五位代表的“力量”（权值）是 `",
        "`。"
      ],
      "answer": "16",
      "hint": "继续往左数，1, 2, 4, 8, ...",
      "points": 10
    },
    {
      "type": "explanation",
      "text": "怎么把二进制数变成十进制数呢？\n很简单！看看哪些位置是1，就把这些位置代表的“力量”加起来。\n比如二进制 `101`：\n从右往左看：\n第一位是1，代表 1\n第二位是0，代表 0个2\n第三位是1，代表 1个4\n所以 `101` (二进制) = 1*4 + 0*2 + 1*1 = 4 + 0 + 1 = 5 (十进制)。",
      "points": 0
    },
    {
      "type": "multiple_choice",
      "text": "试试看！二进制数 `110` 转换成十进制是多少？",
      "question": "二进制数 `110` 转换成十进制是多少？",
      "options": [
        "3",
        "4",
        "6",
        "8"
      ],
      "answer_index": 2,
      "hint": "从右往左看：0个1，1个2，1个4。加起来是多少？",
      "points": 10
    },
    {
      "type": "fill_blank",
      "text": "二进制数 `111` 转换成十进制是多少？\n111 (二进制) = 1个4 + 1个2 + 1个1 = `__` (十进制)。",
      "question_parts": [
        "二进制数 `111` 转换成十进制是多少？\n111 (二进制) = 1个4 + 1个2 + 1个1 = `",
        "` (十进制)。"
      ],
      "answer": "7",
      "hint": "4 + 2 + 1 等于多少？",
      "points": 10
    },
    {
      "type": "multiple_choice",
      "text": "二进制数 `1000` 转换成十进制是多少？",
      "question": "二进制数 `1000` 转换成十进制是多少？",
      "options": [
        "4",
        "6",
        "8",
        "10"
      ],
      "answer_index": 2,
      "hint": "从右往左看：0个1，0个2，0个4，1个8。加起来是多少？",
      "points": 10
    },
    {
      "type": "explanation",
      "text": "那怎么把十进制数变成二进制数呢？\n我们可以用“除2取余法”。\n把十进制数不断地除以2，记录下每次的余数（余数只能是0或1）。\n直到商变成0为止。\n最后，把所有的余数从下往上倒着写出来，就是二进制数啦！",
      "points": 0
    },
    {
      "type": "explanation",
      "text": "举个例子，把十进制的 `6` 变成二进制：\n6 ÷ 2 = 3 余 0\n3 ÷ 2 = 1 余 1\n1 ÷ 2 = 0 余 1\n商变成0了，停！\n把余数从下往上倒着读：110。\n所以，十进制的 `6` 就是二进制的 `110`。",
      "points": 0
    },
    {
      "type": "fill_blank",
      "text": "试试把十进制的 `5` 变成二进制。\n5 ÷ 2 = 2 余 1\n2 ÷ 2 = 1 余 0\n1 ÷ 2 = 0 余 1\n从下往上倒着读余数，得到二进制数 `__`。",
      "question_parts": [
        "试试把十进制的 `5` 变成二进制。\n5 ÷ 2 = 2 余 1\n2 ÷ 2 = 1 余 0\n1 ÷ 2 = 0 余 1\n从下往上倒着读余数，得到二进制数 `",
        "`。"
      ],
      "answer": "101",
      "hint": "余数是 1, 0, 1。倒过来读是什么？",
      "points": 10
    },
    {
      "type": "multiple_choice",
      "text": "十进制的 `10` 转换成二进制是多少？",
      "question": "十进制的 `10` 转换成二进制是多少？",
      "options": [
        "1010",
        "1001",
        "1100",
        "1110"
      ],
      "answer_index": 0,
      "hint": "用除2取余法试试看：10/2=5 R 0, 5/2=2 R 1, 2/2=1 R 0, 1/2=0 R 1。倒着读余数。",
      "points": 10
    },
    {
      "type": "fill_blank",
      "text": "十进制的 `15` 转换成二进制是多少？\n15 ÷ 2 = 7 余 1\n7 ÷ 2 = 3 余 1\n3 ÷ 2 = 1 余 1\n1 ÷ 2 = 0 余 1\n从下往上倒着读余数，得到二进制数 `__`。",
      "question_parts": [
        "十进制的 `15` 转换成二进制是多少？\n15 ÷ 2 = 7 余 1\n7 ÷ 2 = 3 余 1\n3 ÷ 2 = 1 余 1\n1 ÷ 2 = 0 余 1\n从下往上倒着读余数，得到二进制数 `",
        "`。"
      ],
      "answer": "1111",
      "hint": "所有的余数都是1！",
      "points": 10
    },
    {
      "type": "code_challenge",
      "text": "在C++里，我们可以用一个叫做 `bitset` 的小工具来方便地显示一个数字的二进制。\n需要先写 `#include <bitset>`。\n然后用 `std::bitset<位数>(数字)` 就可以看到二进制啦！比如 `std::bitset<8>(7)` 会显示数字7的8位二进制。",
      "code": "// 这是一个C++程序的基本框架\n#include <iostream>\n#include <bitset>\n\nint main() {\n  int num = 7;\n  // 在这里写代码，把 num 的8位二进制打印出来\n  {user_code}\n  return 0;\n}",
      "question": "请用C++代码把十进制数字 `7` 显示成8位的二进制，并换行。",
      "cpp_context": "#include <iostream>\n#include <bitset>\n\nint main() {\n  int num = 7;\n  {user_code}\n  return 0;\n}",
      "expected_output": "00000111",
      "standard_answer_code": "std::cout << std::bitset<8>(num) << std::endl;",
      "hint": "使用 `std::cout << std::bitset<8>(num) << std::endl;` 来打印。",
      "points": 15
    },
    {
      "type": "explanation",
      "text": "除了二进制，计算机还经常用十六进制（Base 16）。\n十六进制有16个“数字”：0到9，然后用字母A、B、C、D、E、F来表示10到15。\nA=10, B=11, C=12, D=13, E=14, F=15。",
      "points": 0
    },
    {
      "type": "multiple_choice",
      "text": "十六进制的字母 `D` 代表十进制的数字是多少？",
      "question": "十六进制的字母 `D` 代表十进制的数字是多少？",
      "options": [
        "12",
        "13",
        "14",
        "15"
      ],
      "answer_index": 1,
      "hint": "A是10，B是11，C是12，D是...？",
      "points": 10
    },
    {
      "type": "explanation",
      "text": "十六进制的每一位代表的“力量”是16的次方：\n最右边是“个位”（16的0次方，也就是1）\n往左一位是“十六位”（16的1次方，也就是16）\n再往左是“二百五十六位”（16的2次方，也就是256）\n... 就像这样：1, 16, 256, 4096...",
      "points": 0
    },
    {
      "type": "explanation",
      "text": "怎么把十六进制数变成十进制数呢？\n和二进制类似，把每一位上的数字（如果是字母要换算成10-15）乘以它代表的“力量”，然后加起来。\n比如十六进制 `2A`：\n从右往左看：\n第一位是A，代表 10个1\n第二位是2，代表 2个16\n所以 `2A` (十六进制) = 2*16 + 10*1 = 32 + 10 = 42 (十进制)。",
      "points": 0
    },
    {
      "type": "multiple_choice",
      "text": "试试看！十六进制数 `10` 转换成十进制是多少？",
      "question": "十六进制数 `10` 转换成十进制是多少？",
      "options": [
        "1",
        "10",
        "16",
        "20"
      ],
      "answer_index": 2,
      "hint": "从右往左看：0个1，1个16。加起来是多少？",
      "points": 10
    },
    {
      "type": "fill_blank",
      "text": "十六进制数 `2B` 转换成十进制是多少？\n2B (十六进制) = 2个16 + B个1\nB代表11。\n所以 2B (十六进制) = 2*16 + 11*1 = 32 + 11 = `__` (十进制)。",
      "question_parts": [
        "十六进制数 `2B` 转换成十进制是多少？\n2B (十六进制) = 2个16 + B个1\nB代表11。\n所以 2B (十六进制) = 2*16 + 11*1 = 32 + 11 = `",
        "` (十进制)。"
      ],
      "answer": "43",
      "hint": "32 + 11 等于多少？",
      "points": 10
    },
    {
      "type": "explanation",
      "text": "怎么把十进制数变成十六进制数呢？\n用“除16取余法”。\n把十进制数不断地除以16，记录下每次的余数（余数可能是0-15）。\n如果余数是10-15，要换成字母A-F。\n直到商变成0为止。\n最后，把所有的余数（或字母）从下往上倒着写出来，就是十六进制数啦！",
      "points": 0
    },
    {
      "type": "explanation",
      "text": "举个例子，把十进制的 `42` 变成十六进制：\n42 ÷ 16 = 2 余 10 (10是A)\n2 ÷ 16 = 0 余 2\n商变成0了，停！\n把余数从下往上倒着读：2A。\n所以，十进制的 `42` 就是十六进制的 `2A`。",
      "points": 0
    },
    {
      "type": "fill_blank",
      "text": "试试把十进制的 `17` 变成十六进制。\n17 ÷ 16 = 1 余 1\n1 ÷ 16 = 0 余 1\n从下往上倒着读余数，得到十六进制数 `__`。",
      "question_parts": [
        "试试把十进制的 `17` 变成十六进制。\n17 ÷ 16 = 1 余 1\n1 ÷ 16 = 0 余 1\n从下往上倒着读余数，得到十六进制数 `",
        "`。"
      ],
      "answer": "11",
      "hint": "余数是 1, 1。倒过来读是什么？",
      "points": 10
    },
    {
      "type": "multiple_choice",
      "text": "十进制的 `30` 转换成十六进制是多少？",
      "question": "十进制的 `30` 转换成十六进制是多少？",
      "options": [
        "1E",
        "2A",
        "1F",
        "20"
      ],
      "answer_index": 0,
      "hint": "用除16取余法：30/16=1 余 14 (E)，1/16=0 余 1。倒着读余数。",
      "points": 10
    },
    {
      "type": "explanation",
      "text": "在C++里，我们可以用 `std::hex` 来告诉 `cout` 接下来要打印的数字用十六进制显示。\n用完十六进制，可以用 `std::dec` 再换回十进制。",
      "code": "#include <iostream>\n#include <iomanip> // 使用 std::hex 和 std::dec 需要这个头文件\n\nint main() {\n    int dec_num = 42;\n    std::cout << \"十进制: \" << dec_num << std::endl;\n    std::cout << \"十六进制: \" << std::hex << dec_num << std::endl; // 打印十六进制\n    std::cout << \"再换回十进制: \" << std::dec << dec_num << std::endl; // 换回十进制\n    return 0;\n}",
      "points": 0
    },
    {
      "type": "code_challenge",
      "text": "请用C++代码把十进制数字 `50` 显示成十六进制。",
      "code": "// 这是一个C++程序的基本框架\n#include <iostream>\n#include <iomanip> // For std::hex\n\nint main() {\n  int num = 50;\n  // 在这里写代码，把 num 用十六进制打印出来\n  {user_code}\n  return 0;\n}",
      "question": "请用C++代码把十进制数字 `50` 显示成十六进制，并换行。",
      "cpp_context": "#include <iostream>\n#include <iomanip>\n\nint main() {\n  int num = 50;\n  {user_code}\n  return 0;\n}",
      "expected_output": "32",
      "standard_answer_code": "std::cout << std::hex << num << std::endl;",
      "hint": "在打印数字之前，先用 `std::hex`。别忘了 `#include <iomanip>`。",
      "points": 15
    },
    {
      "type": "explanation",
      "text": "二进制和十六进制之间有一个很方便的关系：\n每4位二进制数，正好对应1位十六进制数！\n比如：\n二进制 `0000` 是十六进制的 `0`\n二进制 `1001` 是十六进制的 `9`\n二进制 `1010` 是十六进制的 `A` (10)\n二进制 `1111` 是十六进制的 `F` (15)",
      "points": 0
    },
    {
      "type": "multiple_choice",
      "text": "二进制的 `1111` 对应十六进制的哪个数字？",
      "question": "二进制的 `1111` 对应十六进制的哪个数字？",
      "options": [
        "E",
        "F",
        "10",
        "15"
      ],
      "answer_index": 1,
      "hint": "1111 (二进制) = 8+4+2+1 = 15 (十进制)。哪个十六进制字母代表15？",
      "points": 10
    },
    {
      "type": "fill_blank",
      "text": "二进制的 `1010` 对应十六进制的哪个数字？\n1010 (二进制) = 8+0+2+0 = 10 (十进制)。\n代表10的十六进制数字是 `__`。",
      "question_parts": [
        "二进制的 `1010` 对应十六进制的哪个数字？\n1010 (二进制) = 8+0+2+0 = 10 (十进制)。\n代表10的十六进制数字是 `",
        "`。"
      ],
      "answer": "A",
      "hint": "A代表10，B代表11，以此类推。",
      "points": 10
    },
    {
      "type": "multiple_choice",
      "text": "十六进制的 `5` 对应4位二进制是多少？",
      "question": "十六进制的 `5` 对应4位二进制是多少？",
      "options": [
        "0101",
        "1010",
        "0011",
        "1100"
      ],
      "answer_index": 0,
      "hint": "十进制的5转换成二进制是101。如果需要4位，前面补0。",
      "points": 10
    },
    {
      "type": "fill_blank",
      "text": "十六进制的 `E` 对应4位二进制是多少？\nE代表十进制的14。\n14转换成二进制是 `__`。",
      "question_parts": [
        "十六进制的 `E` 对应4位二进制是多少？\nE代表十进制的14。\n14转换成二进制是 `",
        "`。"
      ],
      "answer": "1110",
      "hint": "用除2取余法把14变成二进制。",
      "points": 10
    },
    {
      "type": "code_challenge",
      "text": "现在我们来做一个综合练习！\n编写一个程序，读取一个十进制整数，然后分别用十六进制和8位二进制格式打印出来。\n例如输入26，输出十六进制为 1a，二进制为 00011010。",
      "code": "// 这是一个C++程序的基本框架\n#include <iostream>\n#include <bitset>\n#include <iomanip> // 需要这个库来使用 std::hex 和 std::dec\n\nint main() {\n  int num;\n  std::cout << \"请输入一个十进制整数: \";\n  std::cin >> num;\n\n  // 在这里写代码，先打印十六进制，再打印8位二进制\n  {user_code}\n\n  return 0;\n}",
      "question": "编写一个程序，读取一个十进制整数 `num` (例如26)，然后先输出其十六进制形式，换行，再输出其8位二进制形式，换行。",
      "cpp_context": "#include <iostream>\n#include <bitset>\n#include <iomanip>\n\nint main() {\n  int num;\n  // std::cout << \"请输入一个十进制整数: \";\n  // std::cin >> num;\n  num = 26; // 假设输入为26用于测试\n  {user_code}\n  return 0;\n}",
      "expected_output": "1a\n00011010",
      "standard_answer_code": "std::cout << std::hex << num << std::endl;\n  std::cout << std::dec << std::bitset<8>(num) << std::endl;",
      "hint": "先用 `std::cin >> num;` 读取数字（或使用预设值26）。\n然后用 `std::cout << std::hex << num << std::endl;` 打印十六进制。\n接着用 `std::cout << std::dec << std::bitset<8>(num) << std::endl;` 打印二进制。`std::dec`确保bitset不受hex影响。",
      "points": 15
    },
    {
      "type": "fill_blank",
      "text": "复习一下！二进制数 `11010` 转换成十进制是多少？\n11010 (二进制) = 1个16 + 1个8 + 0个4 + 1个2 + 0个1 = `__` (十进制)。",
      "question_parts": [
        "复习一下！二进制数 `11010` 转换成十进制是多少？\n11010 (二进制) = 1个16 + 1个8 + 0个4 + 1个2 + 0个1 = `",
        "` (十进制)。"
      ],
      "answer": "26",
      "hint": "16 + 8 + 2 等于多少？",
      "points": 10
    },
    {
      "type": "multiple_choice",
      "text": "复习一下！十进制的 `25` 转换成二进制是多少？",
      "question": "复习一下！十进制的 `25` 转换成二进制是多少？",
      "options": [
        "11001",
        "10101",
        "11010",
        "10011"
      ],
      "answer_index": 0,
      "hint": "用除2取余法试试看。",
      "points": 10
    },
    {
      "type": "fill_blank",
      "text": "复习一下！十六进制数 `3C` 转换成十进制是多少？\n3C (十六进制) = 3个16 + C个1\nC代表12。\n所以 3C (十六进制) = 3*16 + 12*1 = 48 + 12 = `__` (十进制)。",
      "question_parts": [
        "复习一下！十六进制数 `3C` 转换成十进制是多少？\n3C (十六进制) = 3个16 + C个1\nC代表12。\n所以 3C (十六进制) = 3*16 + 12*1 = 48 + 12 = `",
        "` (十进制)。"
      ],
      "answer": "60",
      "hint": "48 + 12 等于多少？",
      "points": 10
    },
    {
      "type": "multiple_choice",
      "text": "复习一下！十进制的 `100` 转换成十六进制是多少？",
      "question": "复习一下！十进制的 `100` 转换成十六进制是多少？",
      "options": [
        "64",
        "A0",
        "100",
        "F4"
      ],
      "answer_index": 0,
      "hint": "用除16取余法：100/16 = 6 余 4，6/16 = 0 余 6。倒着读余数。",
      "points": 10
    },
    {
      "type": "fill_blank",
      "text": "复习一下！二进制数 `101010` 转换成十进制是多少？\n101010 (二进制) = 1个32 + 0个16 + 1个8 + 0个4 + 1个2 + 0个1 = `__` (十进制)。",
      "question_parts": [
        "复习一下！二进制数 `101010` 转换成十进制是多少？\n101010 (二进制) = 1个32 + 0个16 + 1个8 + 0个4 + 1个2 + 0个1 = `",
        "` (十进制)。"
      ],
      "answer": "42",
      "hint": "32 + 8 + 2 等于多少？",
      "points": 10
    },
    {
      "type": "explanation",
      "text": "太棒了！你学会了不同进制之间的转换。\n计算机内部主要用二进制，但十六进制是程序员的好帮手，因为它能更简洁地表示二进制。\n理解进制转换，能帮助你更好地理解计算机是怎么“思考”和存储数据的哦！",
      "points": 0
    }
  ]
}